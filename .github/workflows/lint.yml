name: Lint

on:
  push:
    branches: [master,dev]
  pull_request:
    branches: [master,dev]

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Set output
        id: vars
        run: echo ::set-output name=branch::$(echo ${GITHUB_REF:11})

      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Install dependencies
        run: yarn install
      
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Run linters
        run: |
          git fetch
          changes=$(git status -s | wc -l)
          echo $changes
          git checkout ${{ github.head_ref }}
          cd packages/popup
          yarn fix
          cd ../..
      
      # - name: push
      #   uses: github-actions-x/commit@v2.3
      #   if: startsWith(github.event.ref, 'refs/heads/')
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     push-branch: ${{ steps.vars.outputs.branch }}
      #     commit-message: 'lint'
      #     force-add: 'false'
      #     name: Github Action
      #     email: it@dipperin.io 
      - name: Add changes to Git tracking
        id: git_commit
        run: |
          git config --global user.email "it@dipperin.io"
          git config --global user.name "Github Action"
          changes=$(git status -s | wc -l)
          echo ::set-output name=changes::$changes
          echo $changes
          if [ "$changes" -gt "0" ] ; then
            echo "commit"
            git add -A .
            git commit -am 'lint'
          fi
    
      # - name: Commit changes
      #   uses: gha-utilities/workspace-commit@v0.0.2
      #   with:
      #     message: 'lint'
      #     all: true

      - name: Push changes
        uses: ad-m/github-push-action@master
        if: steps.git_commit.outputs.changes > 0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.vars.outputs.branch }}
